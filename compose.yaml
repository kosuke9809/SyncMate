services:
  db:
    build:
      context: .
      dockerfile: ./db/Dockerfile
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    container_name: postgres
    restart: always
    networks:
      - backend-network
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - 3001:3000
    environment:
      NEXT_ENV: ${NEXT_ENV}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    container_name: next-app
    restart: always
    depends_on:
      - backend-user-manager
    networks:
      - frontend-network
  backend-user-manager:
    build:
      context: .
      dockerfile: ./backend/user_manager/Dockerfile
    ports:
      - "8081:8080"
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: db
      DB_PORT: 5432
    container_name: user-manager-api
    restart: always
    depends_on:
      - db
    networks:
      - backend-network
      - frontend-network
networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge